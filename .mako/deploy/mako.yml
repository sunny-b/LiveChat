# Type
#
# What type of app is this? (classic, microservice, static, serverless)
type: classic

# Services
#
# A service is a publicly accessible service, usually the application itself.
#
# A service is declared as follows:
#   <NAME>:
#     <KEY>: <VALUE>
#     <...>: <...>
#
# Examples:
#   # simple docker
#   web:
#     build:
#       dockerfile: Dockerfile
#
#   # simple heroku
#   web:
#     build:
#       buildpack: auto
#
#   # complex
#   web:
#     # docker build configuration
#     build:
#       dockerfile: Dockerfile
#       args:
#         FOO: bar
#         BAZ: boa
#     # custom command to start the service
#     command: start-app
#     # drain custom logfiles to logger
#     logs:
#       - prefix: app[error]
#         path: /app/log/production.log
#     # network storage
#     mounts:
#       - type: nfs
#         from: storage
#         dirs:
#           - path/to/directoryA
#           - path/to/directoryB
#     # forward requests to port 8080
#     http_port: 8080
#     # dissallow non https
#     force_ssl: true
#     # specify subdomain/routes to this service
#     routes:
#       - "admin:"
#       - ^/admin/"
#     # any tcp ports to forward
#     tcp_ports:
#       - "5555:5555"
#     # any udp ports to forward
#     udp_ports:
#       - "9654:10000"
#     # run these commands before updating load balancer
#     before_live:
#       - "./migrate db"
#     # run these commands after updating load balancer
#     after_live:
#       - "./cache reset"
#     # auto-generate the following evars from the command output
#     generate_evars:
#       SECRET_KEY: ./generate-secret
services:
  # web service definition
  web:
    # Run the app with gunicorn
    command: start-node
    # Port to forward http requests to
    http_port: 3000
    # Build instructions
    build:
      # Dockerfile location
      dockerfile: .mako/deploy/Dockerfile
  
# Databases
#
# A database is internal to the application, and is not accessible to the public.
#
# Access to databases is accomplished via 'mako console' or 'mako tunnel'
#
# A database is declared as follows:
#   <NAME>: <docker image>
#
# Examples:
#   databases:
#     mysql: nanobox/mysql
#     postgres: nanobox/postgresql
#     redis: nanobox/redis
#
databases:
  
